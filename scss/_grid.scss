@function calculateColumns($i, $grid-columns) {
  @return calc($i * 100% / $grid-columns);
}

$grid-columns: 12;

$container-max-widths: (
  default: 1140px,
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  fluid: 100%
);

$grid-gutters: (
  20: 10px,
  40: 20px,
  60: 30px
);

.container {
  width: 100%;
  margin: 0 auto;
  box-sizing: border-box;

  @each $key, $val in $container-max-widths {
    @if ($key == 'default') {
      max-width: #{$val};
    } @else {
      &-#{$key} {
        @extend .container;
        max-width: #{$val};
      }
    }
  }
}

.row {
  display: flex;
  flex-flow: row wrap;
}

.row-nowrap {
  display: flex;
  flex-flow: row nowrap;
}
.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

.col-auto {
  flex-basis: auto;
  flex-grow: 1;
  width: auto;
}

@include xs {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: calculateColumns($i, $grid-columns);
    }

    .offset-xs-#{$i} {
      margin-left: calculateColumns($i, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: calculateColumns($i, $grid-columns);
    }

    .offset-sm-#{$i} {
      margin-left: calculateColumns($i, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: calculateColumns($i, $grid-columns);
    }

    .offset-md-#{$i} {
      margin-left: calculateColumns($i, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: calculateColumns($i, $grid-columns);
    }

    .offset-lg-#{$i} {
      margin-left: calculateColumns($i, $grid-columns);
    }
  }
}

@include xl {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: calculateColumns($i, $grid-columns);
    }

    .offset-xl-#{$i} {
      margin-left: calculateColumns($i, $grid-columns);
    }
  }
}

@each $key, $val in $grid-gutters {
  .gutter-#{$key} {
    margin-left: -$val;
    margin-right: -$val;

    > * {
      padding: $val;
    }
  }

  .gutter-x-#{$key} {
    margin-left: -$val;
    margin-right: -$val;

    > * {
      padding-left: $val;
      padding-right: $val;
    }
  }

  .gutter-y-#{$key} > * {
    padding-bottom: $val;
    padding-top: $val;
  }
}

.w-100 {
  width: 100%;
  height: 0;
  padding: 0;
}

// ToDo: move to utilities
.o-h {
  overflow: hidden;
}
